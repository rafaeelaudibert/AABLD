<% content_for :title do %>
    Usuário | <%= @user.full_name %>
<% end %>

<%= form_with(model: @user, local: true) do |form| %>

    <div class="form-row">
        <div class="form-group col-md-5">
            <%= form.label :first_name %>
            <%= form.text_field :first_name, class: 'form-control', required: true %>
        </div>

        <div class="form-group col-md-7">
            <%= form.label :last_name %>
            <%= form.text_field :last_name, class: 'form-control', required: true %>
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-6">
            <%= form.label :cpf %><br />
            <%= form.text_field :cpf, class: 'form-control cleave-cpf', required: true %>
            <div class="invalid-feedback">Oops, esse CPF é inválido. Por favor, verifique!</div>
        </div>

        <div class="form-group col-md-6">
            <%= form.label :rg %><br />
            <%= form.text_field :rg, class: 'form-control cleave-rg', required: true %>
        </div>
    </div>

    <%= form.submit class: 'btn btn-lg btn-primary float-right' %>
<% end %>

<% content_for :javascript do %>
  <script>
    function validateCPF(cpf) {	
      cpf = cpf.replace(/[^\d]+/g,'');	
      if(cpf == '') return false;	
      // Elimina CPFs invalidos conhecidos	
      if (cpf.length != 11 || 
        cpf == "00000000000" || 
        cpf == "11111111111" || 
        cpf == "22222222222" || 
        cpf == "33333333333" || 
        cpf == "44444444444" || 
        cpf == "55555555555" || 
        cpf == "66666666666" || 
        cpf == "77777777777" || 
        cpf == "88888888888" || 
        cpf == "99999999999")
          return false;

      // Valida 1o digito	
      let first_add = 0;	
      for (i=0; i < 9; i ++)		
        first_add += parseInt(cpf.charAt(i)) * (10 - i);	
        rev = 11 - (first_add % 11);	
        if (rev == 10 || rev == 11)		
          rev = 0;	
        if (rev != parseInt(cpf.charAt(9)))		
          return false;
      
      // Valida 2o digito	
      let second_add = 0;	
      for (i = 0; i < 10; i ++)		
        second_add += parseInt(cpf.charAt(i)) * (11 - i);	
      rev = 11 - (second_add % 11);	
      if (rev == 10 || rev == 11)	
        rev = 0;	
      if (rev != parseInt(cpf.charAt(10)))
        return false;
      
      return true;   
    };

    const cleaveCPF = new Cleave('.cleave-cpf', {
      numericOnly: true,
      blocks: [3, 3, 3, 2],
      delimiters: ['.', '.', '-'],
      onValueChanged: e => {
        const cpf = e.target.rawValue;
        const target = document.getElementsByClassName('cleave-cpf')[0];

        if (cpf.length == 11 && !validateCPF(cpf)) {
          target.classList.add('is-invalid');
        } else {
          target.classList.remove('is-invalid');
        }
      }
    });

    const cleaveRG = new Cleave('.cleave-rg', {
      numericOnly: true,
      blocks: [20]
    });

    const cleaveBD = new Cleave('.cleave-birthdate', {
      date: true,
      datePattern: ['d', 'm', 'Y'],
      onValueChanged: e => {
        const [_day, _month, year] = e.target.value.split('/');
        const target = document.getElementsByClassName('cleave-birthdate')[0]
        const thisYear = parseInt(new Date().getFullYear());

        if (thisYear - year < 16) {
          target.classList.add('is-invalid');
        } else {
          target.classList.remove('is-invalid');
        }
      }
    });

    const cleavePN = new Cleave('.cleave-phone-number', {
      delimiters: ['(', ') ', '-'],
      blocks: [0, 2, 4, 4],
      numericOnly: true
    });

    const cleaveMPN = new Cleave('.cleave-mobile-phone-number', {
      delimiters: ['(', ') ', '-'],
      blocks: [0, 2, 5, 4],
      numericOnly: true
    });
  </script
<% end %>

<% content_for :extra_javascript do %>
  <script src="/assets/js/cleave.min.js"></script>
<% end %>